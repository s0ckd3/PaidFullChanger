{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"fs-jetpack\"","webpack:///external \"path\"","webpack:///external \"url\"","webpack:///external \"electron-log\"","webpack:///external \"electron-updater\"","webpack:///./src/menu/dev_menu_template.js","webpack:///./src/helpers/window.js","webpack:///./src/background.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","devMenuTemplate","label","submenu","accelerator","click","BrowserWindow","getFocusedWindow","webContents","reloadIgnoringCache","toggleDevTools","app","quit","options","userDataDir","jetpack","cwd","getPath","stateStoreFile","defaultSize","width","height","win","state","windowState","restoredState","read","err","assign","restore","screen","getAllDisplays","some","display","bounds","x","y","windowWithinBounds","getPrimaryDisplay","resetToDefaults","on","isMinimized","isMaximized","position","getPosition","size","getSize","getCurrentPosition","write","atomic","log","autoUpdater","mainWindow","sendStatusToWindow","text","info","send","logger","transports","file","level","env","userDataPath","setPath","menus","push","Menu","setApplicationMenu","buildFromTemplate","createWindow","webPreferences","nodeIntegration","setIcon","path","join","__dirname","loadURL","url","format","pathname","protocol","slashes","openDevTools","ipcMain","event","arg","checkForUpdatesAndNotify","progressObj","log_message","bytesPerSecond","Math","floor","percent","transferred","total","setTimeout","quitAndInstall"],"mappings":"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","file":"background.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","module.exports = require(\"electron\");","module.exports = require(\"fs-jetpack\");","module.exports = require(\"path\");","module.exports = require(\"url\");","module.exports = require(\"electron-log\");","module.exports = require(\"electron-updater\");","import { app, BrowserWindow } from \"electron\";\r\n\r\nexport const devMenuTemplate = {\r\n  label: \"Development\",\r\n  submenu: [\r\n    {\r\n      label: \"Reload\",\r\n      accelerator: \"CmdOrCtrl+R\",\r\n      click: () => {\r\n        BrowserWindow.getFocusedWindow().webContents.reloadIgnoringCache();\r\n      }\r\n    },\r\n    {\r\n      label: \"Toggle DevTools\",\r\n      accelerator: \"Alt+CmdOrCtrl+I\",\r\n      click: () => {\r\n        BrowserWindow.getFocusedWindow().toggleDevTools();\r\n      }\r\n    },\r\n    {\r\n      label: \"Quit\",\r\n      accelerator: \"CmdOrCtrl+Q\",\r\n      click: () => {\r\n        app.quit();\r\n      }\r\n    }\r\n  ]\r\n};\r\n","// This helper remembers the size and position of your windows (and restores\r\n// them in that place after app relaunch).\r\n// Can be used for more than one window, just construct many\r\n// instances of it and give each different name.\r\n\r\nimport { app, BrowserWindow, screen } from \"electron\";\r\nimport jetpack from \"fs-jetpack\";\r\n\r\nexport default (name, options) => {\r\n  const userDataDir = jetpack.cwd(app.getPath(\"userData\"));\r\n  const stateStoreFile = `window-state-${name}.json`;\r\n  const defaultSize = {\r\n    width: options.width,\r\n    height: options.height\r\n  };\r\n  let state = {};\r\n  let win;\r\n\r\n  const restore = () => {\r\n    let restoredState = {};\r\n    try {\r\n      restoredState = userDataDir.read(stateStoreFile, \"json\");\r\n    } catch (err) {\r\n      // For some reason json can't be read (might be corrupted).\r\n      // No worries, we have defaults.\r\n    }\r\n    return Object.assign({}, defaultSize, restoredState);\r\n  };\r\n\r\n  const getCurrentPosition = () => {\r\n    const position = win.getPosition();\r\n    const size = win.getSize();\r\n    return {\r\n      x: position[0],\r\n      y: position[1],\r\n      width: size[0],\r\n      height: size[1]\r\n    };\r\n  };\r\n\r\n  const windowWithinBounds = (windowState, bounds) => {\r\n    return (\r\n      windowState.x >= bounds.x &&\r\n      windowState.y >= bounds.y &&\r\n      windowState.x + windowState.width <= bounds.x + bounds.width &&\r\n      windowState.y + windowState.height <= bounds.y + bounds.height\r\n    );\r\n  };\r\n\r\n  const resetToDefaults = () => {\r\n    const bounds = screen.getPrimaryDisplay().bounds;\r\n    return Object.assign({}, defaultSize, {\r\n      x: (bounds.width - defaultSize.width) / 2,\r\n      y: (bounds.height - defaultSize.height) / 2\r\n    });\r\n  };\r\n\r\n  const ensureVisibleOnSomeDisplay = windowState => {\r\n    const visible = screen.getAllDisplays().some(display => {\r\n      return windowWithinBounds(windowState, display.bounds);\r\n    });\r\n    if (!visible) {\r\n      // Window is partially or fully not visible now.\r\n      // Reset it to safe defaults.\r\n      return resetToDefaults();\r\n    }\r\n    return windowState;\r\n  };\r\n\r\n  const saveState = () => {\r\n    if (!win.isMinimized() && !win.isMaximized()) {\r\n      Object.assign(state, getCurrentPosition());\r\n    }\r\n    userDataDir.write(stateStoreFile, state, { atomic: true });\r\n  };\r\n\r\n  state = ensureVisibleOnSomeDisplay(restore());\r\n\r\n  win = new BrowserWindow(Object.assign({}, options, state));\r\n\r\n  win.on(\"close\", saveState);\r\n\r\n  return win;\r\n};\r\n","// This is main process of Electron, started as first thing when your\r\n// app starts. It runs through entire life of your application.\r\n// It doesn't have any windows which you can see on screen, but we can open\r\n// window from here.\r\n\r\nimport path from \"path\";\r\nimport url from \"url\";\r\nimport { app, Menu, ipcMain } from \"electron\";\r\nimport { devMenuTemplate } from \"./menu/dev_menu_template\";\r\nimport createWindow from \"./helpers/window\";\r\n\r\nconst log = require('electron-log');\r\nconst { autoUpdater } = require(\"electron-updater\");\r\n\r\n//-------------------------------------------------------------------\r\n// Logging\r\n//\r\n// THIS SECTION IS NOT REQUIRED\r\n//\r\n// This logging setup is not required for auto-updates to work,\r\n// but it sure makes debugging easier :)\r\n//-------------------------------------------------------------------\r\nautoUpdater.logger = log;\r\nautoUpdater.logger.transports.file.level = 'info';\r\nlog.info('App starting...');\r\n\r\nlet mainWindow;\r\n\r\nfunction sendStatusToWindow(text) {\r\n  log.info(text);\r\n  mainWindow.send('message', text);\r\n}\r\n\r\n// Special module holding environment variables which you declared\r\n// in config/env_xxx.json file.\r\nimport env from \"env\";\r\n\r\nconst setApplicationMenu = () => {\r\n  const menus = [\r\n    {\r\n      label: \"Setting\",\r\n      submenu: [\r\n        {\r\n          label: 'Add Packages',\r\n          click() {\r\n            mainWindow.send('onSettings', 'package-wipe');\r\n          }\r\n        },\r\n        {\r\n          label: 'Configuration',\r\n          click() {\r\n            mainWindow.send('onSettings', 'config');\r\n          }\r\n        },\r\n        {\r\n          label: 'Check File Backup',\r\n          click() {\r\n            mainWindow.send('onSettings', 'check-mail');\r\n          }\r\n        },\r\n        {\r\n          label: \"Configuration-auto\",\r\n          click() {\r\n            mainWindow.send('onSettings', 'configuration-auto');\r\n          }\r\n        },\r\n        {\r\n          label: \"Signout\",\r\n          click() {\r\n            mainWindow.send('onSettings', 'signOut');\r\n          }\r\n        },\r\n\r\n      ]\r\n    },\r\n\r\n  ];\r\n  if (env.name !== \"production\") {\r\n    menus.push(devMenuTemplate);\r\n  }\r\n  Menu.setApplicationMenu(Menu.buildFromTemplate(menus));\r\n};\r\n\r\n// Save userData in separate folders for each environment.\r\n// Thanks to this you can use production and development versions of the app\r\n// on same machine like those are two separate apps.\r\nif (env.name !== \"production\") {\r\n  const userDataPath = app.getPath(\"userData\");\r\n  app.setPath(\"userData\", `${userDataPath} (${env.name})`);\r\n}\r\n\r\napp.on(\"ready\", () => {\r\n  setApplicationMenu();\r\n\r\n  mainWindow = createWindow(\"main\", {\r\n    width: 1000,\r\n    height: 625,\r\n    webPreferences: {\r\n      nodeIntegration: true\r\n    },\r\n    //frame: false\r\n  });\r\n  mainWindow.setIcon(path.join(__dirname, '/assets/icons/icon.ico'));\r\n  //mainWindow.setMenu(null);\r\n  mainWindow.loadURL(\r\n    url.format({\r\n      pathname: path.join(__dirname, \"login.html\"),\r\n      protocol: \"file:\",\r\n      slashes: true\r\n    })\r\n  );\r\n\r\n  if (env.name === \"development\") {\r\n    mainWindow.openDevTools();\r\n  }\r\n  // mainWindow.openDevTools();\r\n\r\n  /**\r\n   * Redirect to specify screen\r\n   */\r\n  ipcMain.on('redirect', (event, arg) => {\r\n    if (!arg || !arg.file) return;\r\n    mainWindow.loadURL(\r\n      url.format({\r\n        pathname: path.join(__dirname, arg.file),\r\n        protocol: \"file:\",\r\n        slashes: true\r\n      })\r\n    );\r\n  });\r\n\r\n  ipcMain.on('check-update', () => {\r\n    autoUpdater.checkForUpdatesAndNotify();\r\n  });\r\n\r\n});\r\n\r\nautoUpdater.on('checking-for-update', () => {\r\n  sendStatusToWindow('Checking for update...');\r\n})\r\nautoUpdater.on('update-available', () => {\r\n  sendStatusToWindow('Update available.');\r\n})\r\nautoUpdater.on('update-not-available', () => {\r\n  sendStatusToWindow('Update not available.');\r\n})\r\nautoUpdater.on('error', (err) => {\r\n  sendStatusToWindow('Error in auto-updater. ' + err);\r\n})\r\nautoUpdater.on('download-progress', (progressObj) => {\r\n  let log_message = \"Download speed: \" + progressObj.bytesPerSecond;\r\n  log_message = log_message + ' - Downloaded ' + Math.floor(progressObj.percent) + '%';\r\n  log_message = log_message + ' (' + Math.floor(progressObj.transferred) + \"/\" + Math.floor(progressObj.total) + ')';\r\n  sendStatusToWindow(log_message);\r\n})\r\nautoUpdater.on('update-downloaded', () => {\r\n  sendStatusToWindow('Update downloaded, Installing...');\r\n  setTimeout(() => {\r\n    autoUpdater.quitAndInstall();\r\n  }, 2000);\r\n});\r\n\r\napp.on(\"window-all-closed\", () => {\r\n  app.quit();\r\n});\r\n"],"sourceRoot":""}